import 'package:flutter/material.dart';
import 'package:hugeicons/hugeicons.dart';
import 'package:url_launcher/url_launcher.dart';
import '../../models/customer_model/customer_class.dart';
import '../../providers/customer_provider.dart';
import '../../screens/customers/get_customer_details.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';


class CustomerCard extends ConsumerWidget {
  final Customer customer;

  const CustomerCard({super.key, required this.customer});

  Future<void> _editCustomer(BuildContext context) async {
    Navigator.push(
      context,
      PageRouteBuilder(
        pageBuilder: (context, animation, secondaryAnimation) =>
            AddNewCustomerPage(customer: customer),
        transitionDuration: const Duration(milliseconds: 100),
        transitionsBuilder: (context, animation, secondaryAnimation, child) {
          return FadeTransition(
            opacity: animation,
            child: SlideTransition(
              position: Tween<Offset>(
                begin: const Offset(0, 1),
                end: const Offset(0, 0),
              ).animate(animation),
              child: child,
            ),
          );
        },
      ),
    );
  }

  Future<void> _deleteCustomer(WidgetRef ref) async {
    try {
      final customerService = await ref.read(customerServiceProvider.future);
      await customerService.deleteCustomer(customer.custId!);
      
    } catch (error) {
      print('Error deleting customer: $error');
    }
  }

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return Center(
      child: Container(
        width: MediaQuery.of(context).size.width * 0.9,
        margin: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 1.0),
        child: Card(
          elevation: 4.0,
          child: Padding(
            padding: const EdgeInsets.all(12),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    Expanded(
                      child: Text(
                        customer.name,
                        style: const TextStyle(
                          fontSize: 16.0,
                          fontWeight: FontWeight.bold,
                        ),
                        maxLines: 1,
                        overflow: TextOverflow.ellipsis,
                      ),
                    ),
                    IconButton(
                      onPressed: () => _editCustomer(context),
                      icon: const Icon(Icons.edit),
                    ),
                    IconButton(
                      onPressed: () => _deleteCustomer(ref),
                      icon: const Icon(Icons.delete),
                    ),
                  ],
                ),
                Text(
                  customer.address,
                  style: const TextStyle(fontSize: 14.0, color: Colors.grey),
                  maxLines: 1,
                  overflow: TextOverflow.ellipsis,
                ),
                const SizedBox(height: 12),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    IconButton(
                      onPressed: () async {
                        final Uri url = Uri(scheme: 'tel', path: customer.phoneNumber);
                        if (await canLaunchUrl(url)) {
                          await launchUrl(url);
                        } else {
                          print('Could not launch phone dialer');
                        }
                      },
                      icon: const Icon(Icons.call_rounded, size: 22, color: Color(0xFF028F83)),
                    ),
                    IconButton(
                      onPressed: () {
                        print("Chat functionality to be implemented");
                      },
                      icon: const Icon(Icons.chat_outlined, size: 22, color: Color(0xFF028F83)),
                    ),
                    IconButton(
                      onPressed: () {
                        print("WhatsApp Opens");
                      },
                      icon: const HugeIcon(
                        icon: HugeIcons.strokeRoundedWhatsapp,
                        color: Color(0xFF028F83),
                        size: 24.0,
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
