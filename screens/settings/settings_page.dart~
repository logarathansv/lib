import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:hugeicons/hugeicons.dart';
import 'package:sklyit_business/screens/settings/personal_details.dart';
import 'package:sklyit_business/screens/settings/subscription_page.dart';
import '../../api/auth_api/logout_api.dart';
import '../../providers/business_main.dart';
import 'display_profile.dart';
import 'help_page.dart';

class SettingsPage extends ConsumerWidget {
  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return Scaffold(
      appBar: AppBar(
          title: RichText(
            text: const TextSpan(
              children: [
                TextSpan(
                  text: 'Skly It ', // The unstyled part
                  style: TextStyle(
                    fontSize: 20,
                    fontFamily: 'Parkinsans',
                    fontWeight: FontWeight.bold,
                    color: Color.fromRGBO(47, 72, 88, 1),
                  ),
                ),
                TextSpan(
                  text: 'Business ', // The styled part
                  style: TextStyle(
                    fontSize: 20,
                    fontFamily: 'Parkinsans',
                    fontWeight: FontWeight.bold,
                    color: Color(0xFFF4C345), // Custom color for "Professional"
                  ),
                ),
              ],
            ),
          )),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            colors: [Colors.white70, Colors.white],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        padding: EdgeInsets.all(20),
        child: ListView(
          children: [
            Text(
              'Settings',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Color(0xFF2F4757),
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 20),
            _buildButton(
              context,
              'Profile Settings',
              'Change Photo, Name, Email Address, Phone Number',
              HugeIcons.strokeRoundedUserSquare,
                  () {
                Navigator.push(
                  context,
                  _createRoute(ProfilePage())
                  ,
                );
              },
            ),
            SizedBox(height: 15),// Space between header and buttons
            _buildButton(
              context,
              'Professional Settings',
              'Change Availability Timings, Services, Certificates',
              HugeIcons.strokeRoundedPowerService,
                  () {
                Navigator.push(
                  context,
                  _createRoute(DisplayProfile()),
                );
              },
            ),
            SizedBox(height: 15), // Space between buttons
            _buildButton(
              context,
              'Help & Support',
              'FAQs, Contact Us',
              HugeIcons.strokeRoundedCustomerService01,
                  () {
                Navigator.push(
                  context,
                  _createRoute(
                      HelpPage()
                  ),
                );
              },
            ),
            SizedBox(height: 15), // Space between buttons
            _buildButton(
              context,
              'Subscription & Plans',
              'About Skly It Subscription Methods, Details',
              HugeIcons.strokeRoundedPolicy,
                  () {
                Navigator.push(
                  context,
                  _createRoute(
                      SubscriptionPage()
                  ),
                );
              },
            ),
            SizedBox(height: 15), // Space between buttons
            _buildButton(
              context,
              'Rate Us',
              'Rate Us on Google Play Store',
              HugeIcons.strokeRoundedStar,
                  () {

              },
            ),
            SizedBox(height: 15), // Space between buttons
            _buildButton(
              context,
              'Log Out',
              'Logout from your account',
              HugeIcons.strokeRoundedLogout02,
                  () async {
                showDialog(
                  context: context,
                  builder: (context) => AlertDialog(
                    title: Text(
                      'Logout',
                      style: TextStyle(
                        color: Colors.black, // You can change the title color here
                      ),
                    ),
                    content: Text(
                      'Are you sure you want to logout?',
                      style: TextStyle(
                        color: Colors.black, // You can change the content text color here
                      ),
                    ),
                    backgroundColor: Colors.amber[100], // Amber background color
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.all(Radius.circular(8)), // Rectangle shape with rounded corners
                    ),
                    actions: [
                      TextButton(
                        child: Text(
                          'No',
                          style: TextStyle(
                            color: Colors.black, // Text color for 'No'
                          ),
                        ),
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                      ),
                      TextButton(
                        child: Text(
                          'Yes',
                          style: TextStyle(
                            color: Colors.black, // Text color for 'Yes'
                          ),
                        ),
                        onPressed: () async {
                          await LogoutAPIService(ref.watch(apiClientProvider).dio).logout();
                          onLogout();
                          SystemNavigator.pop();
                          // Navigator.pushAndRemoveUntil(
                          //   context,
                          //   MaterialPageRoute(builder: (context) => LoginPage(onLogout: onLogout)),
                          //       (route) => false, // Remove all routes
                          // );
                        },
                      ),
                    ],
                  ),
                );
              },
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildButton(BuildContext context, String title, String content, IconData icon, VoidCallback onPressed) {
    return Container(
      decoration: BoxDecoration(
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.3),
            spreadRadius: 2,
            blurRadius: 2,
            offset: Offset(0, 3),
          ),
        ],
        border: Border(
          bottom: BorderSide(
            color: Color(0xFF2F4757), // Bottom border color
            width: 2.0, // Thickness of the bottom border
          ),
        ),
      ),
      child: OutlinedButton(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.white,
          foregroundColor: Color(0xFF2F4757), // Text color
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10), // Corner radius
          ),
          side: BorderSide.none, // Remove default border
        ),
        onPressed: onPressed,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
            Icon(icon, color: Color(0xFF2F4757), size: 26), // Icon color
            SizedBox(width: 10),
            Expanded(
                child: Container(
                  padding: EdgeInsets.all(8),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.start,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        title,
                        style: TextStyle(
                          fontSize: 16,
                          fontFamily: 'Parkinsans',
                        ),
                      ),
                      Text(
                        content,
                        style: TextStyle(
                            fontSize: 12,
                            fontFamily: 'Parkinsans',
                            color: Colors.grey
                        ),
                        maxLines: 2,
                        overflow: TextOverflow.visible,
                      ),
                    ],
                  ),
                )
            )
          ],
        ),
      ),
    );
  }
  Route _createRoute(Widget page) {
    return PageRouteBuilder(
      pageBuilder: (context, animation, secondaryAnimation) => page,
      transitionsBuilder: (context, animation, secondaryAnimation, child) {
        const begin = Offset(1.0, 0.0); // Slide from right
        const end = Offset.zero;
        const curve = Curves.easeInOut;

        var tween = Tween(begin: begin, end: end).chain(CurveTween(curve: curve));
        var offsetAnimation = animation.drive(tween);

        return SlideTransition(
          position: offsetAnimation,
          child: child,
        );
      },
    );
  }

}