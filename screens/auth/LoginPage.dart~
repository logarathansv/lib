import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:flutter_secure_storage/flutter_secure_storage.dart';
<<<<<<< HEAD
import 'package:sklyit_business/screens/auth/register_screen.dart';
=======
>>>>>>> 12697c6cd7b89ab5347435037c5c34f8fad3927b

import '../../api/auth_api/login_api.dart';
import '../../main.dart';

<<<<<<< HEAD
class LoginPage extends ConsumerStatefulWidget {
  final GlobalKey<RegisterPageState> registerPageKey = GlobalKey<RegisterPageState>();
  LoginPage({Key? key}) : super(key: key);
=======
bool _wrongEmail = false;
bool _wrongPassword = false;

class LoginPage extends ConsumerStatefulWidget {

>>>>>>> 12697c6cd7b89ab5347435037c5c34f8fad3927b
  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends ConsumerState<LoginPage> {
  final TextEditingController usernameController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  final storage = FlutterSecureStorage();

<<<<<<< HEAD
  bool _isLoading = false; // ðŸ”¹ Added loading state

  Future<void> _login() async {
    setState(() {
      _isLoading = true; // ðŸ”¹ Start loading
    });

=======
  Future<void> _login() async {
>>>>>>> 12697c6cd7b89ab5347435037c5c34f8fad3927b
    final loginService = ref.read(loginApiProvider);
    final res = await loginService.login(
      usernameController.text,
      passwordController.text,
    );
<<<<<<< HEAD

    print('Login response: $res'); // Debugging

    if (res == 'Login successful') {
      Navigator.pushAndRemoveUntil(
          context,
          MaterialPageRoute(builder: (context) => SklyitApp()),
              (route) => false);
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text(res),
          backgroundColor: Colors.redAccent,
        ),
      );
    }

    setState(() {
      _isLoading = false; // ðŸ”¹ Stop loading
    });
=======
    print('Login response: $res'); // Debugging

    if (res == 'Login successful') {
      Navigator.pushAndRemoveUntil(context, MaterialPageRoute(builder: (context) => SklyitApp()), (route) => false);
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text(res), backgroundColor: Colors.redAccent,),
      );
    }
>>>>>>> 12697c6cd7b89ab5347435037c5c34f8fad3927b
  }

  @override
  Widget build(BuildContext context) {
<<<<<<< HEAD
=======
    String emailText = 'Email doesn\'t match';
    String passwordText = 'Password doesn\'t match';
>>>>>>> 12697c6cd7b89ab5347435037c5c34f8fad3927b

    return Scaffold(
      resizeToAvoidBottomInset: false,
      backgroundColor: Colors.white,
<<<<<<< HEAD
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 40.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Icon(Icons.person, size: 80.0, color: Colors.amber),
                  SizedBox(height: 10.0),
                  Text(
                    'Login',
                    style: TextStyle(
                      fontSize: 50.0,
                      color: Colors.teal.shade700,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  Text(
                    'Welcome back,\nplease login to your account',
                    style: TextStyle(fontSize: 25.0, color: Colors.teal.shade700),
                  ),
                ],
              ),
              Column(
                children: [
                  TextField(
                    controller: usernameController,
                    keyboardType: TextInputType.emailAddress,
                    decoration: InputDecoration(
                      hintText: 'Email',
                      labelText: 'Email',
                      prefixIcon: Icon(Icons.email, color: Colors.amber),
                    ),
                  ),
                  SizedBox(height: 20.0),
                  TextField(
                    obscureText: true,
                    controller: passwordController,
                    keyboardType: TextInputType.visiblePassword,
                    decoration: InputDecoration(
                      hintText: 'Password',
                      labelText: 'Password',
                      prefixIcon: Icon(Icons.lock, color: Colors.amber),
                    ),
                  ),
                  SizedBox(height: 10.0),
                  Align(
                    alignment: Alignment.topRight,
                    child: GestureDetector(
                      onTap: () {
                        print('Forgot Password tapped');
                      },
                      child: Text(
                        'Forgot Password?',
                        style: TextStyle(fontSize: 18.0, color: Colors.teal),
                      ),
                    ),
                  ),
                ],
              ),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.amber,
                  padding: EdgeInsets.symmetric(vertical: 15.0),
                ),
                onPressed: _isLoading ? null : _login, // ðŸ”¹ Disable when loading
                child: _isLoading
                    ? CircularProgressIndicator(
                  color: Colors.white, // ðŸ”¹ Show loader while logging in
                )
                    : Text(
                  'Login',
                  style: TextStyle(fontSize: 20.0, color: Colors.white),
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    'Don\'t have an account?',
                    style: TextStyle(fontSize: 18.0, color: Colors.black),
                  ),
                  GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(builder: (context) => RegisterPage()),
                      );
                    },
                    child: Text(
                      ' Sign Up',
                      style: TextStyle(fontSize: 18.0, color: Colors.teal),
                    ),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
=======
      body: SafeArea(child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 40.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Icon(
                  Icons.person,
                  size: 80.0,
                  color: Colors.amber,
                ),
                SizedBox(height: 10.0),
                Text(
                  'Login',
                  style: TextStyle(
                    fontSize: 50.0,
                    color: Colors.teal.shade700,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                Text(
                  'Welcome back,\nplease login to your account',
                  style: TextStyle(
                    fontSize: 25.0,
                    color: Colors.teal.shade700,
                  ),
                ),
              ],
            ),
            Column(
              children: [
                TextField(
                  controller: usernameController,
                  keyboardType: TextInputType.emailAddress,
                  decoration: InputDecoration(
                    hintText: 'Email',
                    labelText: 'Email',
                    errorText: _wrongEmail ? emailText : null,
                    prefixIcon: Icon(Icons.email, color: Colors.amber),
                  ),
                ),
                SizedBox(height: 20.0),
                TextField(
                  obscureText: true,
                  controller: passwordController,
                  keyboardType: TextInputType.visiblePassword,
                  decoration: InputDecoration(
                    hintText: 'Password',
                    labelText: 'Password',
                    errorText: _wrongPassword ? passwordText : null,
                    prefixIcon: Icon(Icons.lock, color: Colors.amber),
                  ),
                ),
                SizedBox(height: 10.0),
                Align(
                  alignment: Alignment.topRight,
                  child: GestureDetector(
                    onTap: () {
                      print('Forgot Password tapped');
                    },
                    child: Text(
                      'Forgot Password?',
                      style: TextStyle(fontSize: 18.0, color: Colors.teal),
                    ),
                  ),
                ),
              ],
            ),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.amber,
                padding: EdgeInsets.symmetric(vertical: 15.0),
              ),
              onPressed: _login,
              child: Text(
                'Login',
                style: TextStyle(fontSize: 20.0, color: Colors.white),
              ),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Text(
                  'Don\'t have an account?',
                  style: TextStyle(fontSize: 18.0, color: Colors.black),
                ),
                GestureDetector(
                  onTap: () {
                    // Navigator.push(
                    //   context,
                    //   MaterialPageRoute(builder: (context) => RegisterPage(onLogout: widget.onLogout, key: widget.registerPageKey,)),
                    // );
                  },
                  child: Text(
                    ' Sign Up',
                    style: TextStyle(fontSize: 18.0, color: Colors.teal),
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
      ),
>>>>>>> 12697c6cd7b89ab5347435037c5c34f8fad3927b
    );
  }
}
