import 'package:flutter/material.dart';
import 'package:hugeicons/hugeicons.dart';
import 'package:intl/intl.dart';


class FlashScreen extends StatefulWidget {
  @override
  _OrderTrackingPageState createState() => _OrderTrackingPageState();
}

class _OrderTrackingPageState extends State<FlashScreen> {
  bool isPacked = false;
  bool isHandedOver = false;

  // Store timestamps so they don't update on every UI rebuild
  String orderConfirmedTime = "";
  String? packedTime;
  String? handedOverTime;

  @override
  void initState() {
    super.initState();
    orderConfirmedTime = formatDateTime(DateTime.now()); // Set initial time for order confirmation
  }

  String formatDateTime(DateTime dateTime) {
    String daySuffix(int day) {
      if (day >= 11 && day <= 13) {
        return 'th';
      }
      switch (day % 10) {
        case 1:
          return 'st';
        case 2:
          return 'nd';
        case 3:
          return 'rd';
        default:
          return 'th';
      }
    }

    String formattedDate = DateFormat("E, d MMM ''yy - h:mm a").format(dateTime);
    String day = DateFormat("d").format(dateTime);
    String suffix = daySuffix(int.parse(day));

    return formattedDate.replaceFirst(RegExp(r'\d{1,2}'), '$day$suffix');
  }

  void markPacked() {
    setState(() {
      isPacked = true;
      packedTime = formatDateTime(DateTime.now()); // Set packed timestamp
    });
  }

  void markHandedOver() {
    setState(() {
      isHandedOver = true;
      handedOverTime = formatDateTime(DateTime.now()); // Set handed over timestamp
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text('Order Tracking'),
          backgroundColor: Colors.green,
        ),
        body: SingleChildScrollView(
          child: Padding(
            padding: EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  "Order ID: #123456",
                  style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                ),
                SizedBox(height: 10),
                OrderStep(
                  title: "Order Confirmed",
                  subtitle: "Your order has been placed.",
                  timestamp: orderConfirmedTime,
                  isCompleted: true,
                ),
                OrderStep(
                  title: "Packed Items in Order",
                  subtitle: "Your items have been packed.",
                  timestamp: packedTime ?? formatDateTime(DateTime.now()),
                  isCompleted: isPacked,
                  showButton: !isPacked,
                  onDone: markPacked,
                ),
                if (isPacked) // Show "Handed Over" step only after packing is completed
                  OrderStep(
                    title: "Handed Over to Delivery Person",
                    subtitle: "Your item is with the delivery person.",
                    timestamp: handedOverTime ?? formatDateTime(DateTime.now()),
                    isCompleted: isHandedOver,
                    showButton: !isHandedOver,
                    onDone: markHandedOver,
                  ),
                SizedBox(height: 20),
                Container(
                    decoration: BoxDecoration(
                      color: Colors.green,
                      borderRadius: BorderRadius.circular(8.0),
                      border: Border.all(color: Colors.green),
                    ),
                    width: MediaQuery.of(context).size.width * 0.9,
                    child: Padding(
                        padding: const EdgeInsets.all(10.0),
                        child: Row(
                          children: [
                            Text(
                              "View Order Details",
                              style: TextStyle(
                                color: Colors.white,
                                fontWeight: FontWeight.bold,
                                fontSize: 16,
                              ),
                            ),
                            Spacer(),
                            Icon(Icons.arrow_forward, color: Colors.white, size: 24.0),
                          ],
                        ))),
                SizedBox(height: 20),
                Text(
                  "Past Orders",
                  style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                ),
                SizedBox(height: 10),
                PastOrderCard(
                  deliveryDate: "9th Mar '24",
                  firstItem: "Wireless Mouse",
                  totalItems: 3,
                ),
                PastOrderCard(
                  deliveryDate: "25th Feb '24",
                  firstItem: "Bluetooth Speaker",
                  totalItems: 2,
                ),
                PastOrderCard(
                  deliveryDate: "12th Feb '24",
                  firstItem: "Smartphone Case",
                  totalItems: 5,
                ),
              ],
            ),
          ),
        ));
  }
}

class OrderStep extends StatelessWidget {
  final String title;
  final String subtitle;
  final String timestamp;
  final bool isCompleted;
  final bool showButton;
  final VoidCallback? onDone;

  OrderStep({
    required this.title,
    required this.subtitle,
    required this.timestamp,
    this.isCompleted = false,
    this.showButton = false,
    this.onDone,
  });

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Row(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Column(
              children: [
                Icon(
                  Icons.check_circle,
                  color: isCompleted ? Colors.green : Colors.grey,
                ),
                Container(
                  width: 2,
                  height: 40,
                  color: isCompleted ? Colors.green : Colors.grey,
                ),
              ],
            ),
            SizedBox(width: 10),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    title,
                    style: TextStyle(
                      fontWeight: FontWeight.bold,
                      fontSize: 16,
                      color: isCompleted ? Colors.green : Colors.black,
                    ),
                  ),
                  Text(subtitle, style: TextStyle(color: Colors.grey)),
                  Text(timestamp, style: TextStyle(fontSize: 12)),
                ],
              ),
            ),
            if (showButton)
              ElevatedButton(
                onPressed: onDone,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.green,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20),
                  ),
                ),
                child: Text("Done", style: TextStyle(color: Colors.white)),
              ),
          ],
        ),
        SizedBox(height: 10),
      ],
    );
  }
}

class PastOrderCard extends StatelessWidget {
  final String deliveryDate;
  final String firstItem;
  final int totalItems;

  PastOrderCard({
    required this.deliveryDate,
    required this.firstItem,
    required this.totalItems,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      elevation: 3,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(10),
      ),
      child: Padding(
        padding: EdgeInsets.all(10),
        child: Row(
          children: [
            SizedBox(
              width: 60,
              height: 60,
              child: Image.asset(
                'assets/images/cart.png', // Sample cart image (Replace with actual asset)
              ),
            ),
            SizedBox(width: 10),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    "Delivered on $deliveryDate",
                    style: TextStyle(fontWeight: FontWeight.bold),
                  ),
                  Text(
                    "$firstItem + ${totalItems - 1} more items",
                    style: TextStyle(color: Colors.grey),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}