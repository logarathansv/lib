import 'package:flutter/material.dart';
import 'package:hugeicons/hugeicons.dart';

import '../../models/customer_model/customer_class.dart';

class AddNewCustomerPage extends StatefulWidget {
  @override
  _AddNewCustomerPageState createState() => _AddNewCustomerPageState();
}

class _AddNewCustomerPageState extends State<AddNewCustomerPage> {
  final _formKey = GlobalKey<FormState>();
  late String _customerName;
  late String _customerAddress;
  late String _customerEmail;
  late String _customerPhoneNumber;
  String _countryCode = '+91';
  Color _selectedLabelColor = Colors.blue; // Default label color

  final List<Color> _availableColors = [
    Colors.blue,
    Colors.red,
    Colors.green,
    Colors.orange,
    Colors.purple,
    Colors.pink,
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xfff4c345),
        automaticallyImplyLeading: false,
        leading: IconButton(
          onPressed: () => {
            Navigator.of(context).pop()
          },
          icon: HugeIcon(
            icon: HugeIcons.strokeRoundedArrowLeft03,
            color: Colors.black,
            size: 24.0,
          ),
        ),
        title: Text(
          'Add Customer',
          style: TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.bold,
            color: Color(0xFF2f4757),
          ),
        ),
      ),
      body: Container(
        color: Colors.grey[100], // Light grey background
        child: SingleChildScrollView(
          // Allow scrolling if keyboard appears
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Form(
              key: _formKey,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.stretch,
                children: [
                  // Header Text
                  Text(
                    'Please fill in the details below:',
                    style: TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                      color: Color(0xFF028F83),
                    ),
                  ),
                  SizedBox(height: 16),

                  // Customer Name Field
                  _buildTextField(
                    label: 'Customer Name',
                    validator: (value) {
                      if (value!.isEmpty) {
                        return 'Please enter customer name';
                      }
                      return null;
                    },
                    onSaved: (value) => _customerName = value!,
                  ),
                  SizedBox(height: 16),

                  // Customer Address Field
                  _buildTextField(
                    label: 'Customer Address',
                    validator: (value) {
                      if (value!.isEmpty) {
                        return 'Please enter customer address';
                      }
                      return null;
                    },
                    onSaved: (value) => _customerAddress = value!,
                  ),
                  SizedBox(height: 16),

                  // Email Field
                  _buildTextField(
                    label: 'Email ID',
                    validator: (value) {
                      if (value!.isEmpty) {
                        return 'Please enter email';
                      }
                      return null;
                    },
                    onSaved: (value) => _customerEmail = value!,
                  ),
                  SizedBox(height: 16),

                  // Phone Number and Country Code
                  Row(
                    children: [
                      _buildCountryCodeDropdown(),
                      SizedBox(width: 16),
                      Expanded(
                        child: _buildTextField(
                          label: 'Phone Number',
                          validator: (value) {
                            if (value!.isEmpty) {
                              return 'Please enter phone number';
                            }
                            return null;
                          },
                          onSaved: (value) => _customerPhoneNumber = value!,
                        ),
                      ),
                    ],
                  ),
                  SizedBox(height: 24), // Increased spacing

                  // Label Color Picker
                  Text(
                    'Select Label Color:',
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.bold,
                      color: Color(0xFF2f4757),
                    ),
                  ),
                  SizedBox(height: 8),
                  Wrap(
                    spacing: 17,
                    children: _availableColors
                        .map((color) => GestureDetector(
                      onTap: () {
                        setState(() {
                          _selectedLabelColor = color;
                        });
                      },
                      child: CircleAvatar(
                        backgroundColor: color,
                        radius: 20,
                        child: _selectedLabelColor == color
                            ? Icon(Icons.check, color: Colors.white)
                            : null,
                      ),
                    ))
                        .toList(),
                  ),
                  SizedBox(height: 24),

                  // Save Button
                  ElevatedButton(
                    onPressed: () {
                      if (_formKey.currentState!.validate()) {
                        _formKey.currentState!.save();
                        // Create a Customer object
                        Customer customer = Customer(
                          name: _customerName,
                          address: _customerAddress,
                          email: _customerEmail,
                          phoneNumber: _countryCode + _customerPhoneNumber,
                          labelColor: _selectedLabelColor,
                        );
                        Navigator.pop(context, customer);
                      }
                    },
                    style: ElevatedButton.styleFrom(
                      foregroundColor: Color(0xFF2f4757), backgroundColor: Color(0xFFF4C345), // Text color
                      padding: EdgeInsets.symmetric(vertical: 16),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10),
                      ),
                    ),
                    child: Text(
                      'Save',
                      style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  // Helper function to build text fields
  Widget _buildTextField({
    required String label,
    required String? Function(String?) validator,
    required Function(String?) onSaved,
  }) {
    return TextFormField(
      decoration: InputDecoration(
        labelText: label,
        labelStyle: TextStyle(color: Color(0xFF028F83)),
        filled: true,
        fillColor: Colors.white,
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(10),
          borderSide: BorderSide(color: Color(0xFF028F83)),
        ),
      ),
      validator: validator,
      onSaved: onSaved,
    );
  }

  // Helper function for the country code dropdown
  Widget _buildCountryCodeDropdown() {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 8),
      decoration: BoxDecoration(
        color: Colors.white,
        border: Border.all(color: Color(0xFF028F83)),
        borderRadius: BorderRadius.circular(10),
      ),
      child: DropdownButton<String>(
        value: _countryCode,
        items: const [
          DropdownMenuItem(
            child: Text('+91'),
            value: '+91',
          ),
          DropdownMenuItem(
            child: Text('+466'),
            value: '+466',
          ),
        ],
        onChanged: (value) {
          setState(() {
            _countryCode = value!;
          });
        },
        underline: SizedBox(),
      ),
    );
  }
}

// Updated Customer class

